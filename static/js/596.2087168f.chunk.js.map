{"version":3,"file":"static/js/596.2087168f.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/References.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Selected Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const courses = [\n  {\n    title: 'Design And Analysis of Algorithms',\n    number: 'COMP 3804',\n    link: 'https://calendar.carleton.ca/search/?P=COMP%203804',\n    university: 'Carleton',\n  },\n  {\n    title: 'Applied Cryptography and Authentication',\n    number: 'COMP 3109',\n    link: 'https://calendar.carleton.ca/search/?P=COMP%203109',\n    university: 'Carleton',\n  },\n  {\n    title: 'Computer Systems Security',\n    number: 'COMP 4108',\n    link: 'https://calendar.carleton.ca/search/?P=COMP%204108',\n    university: 'Carleton',\n  },\n  {\n    title: 'The Future of Physics in Technology',\n    number: 'PHYS 2903',\n    link:\n      'https://physics.carleton.ca/research',\n    university: 'Carleton',\n  },\n  {\n    title: 'Human-Computer Interaction',\n    number: 'COMP 3008',\n    link: 'https://calendar.carleton.ca/search/?P=COMP%203008',\n    university: 'Carleton',\n  },\n  {\n    title: 'Computing, Society, & Ethics',\n    number: 'COMP 4701',\n    link: 'https://service.scs.carleton.ca/sites/default/files/course_outlines/comp_4701_course_outline_1.pdf',\n    university: 'Carleton',\n  },\n  {\n    title: 'Discrete Structures & Math II',\n    number: 'COMP 2804',\n    link: 'https://cglab.ca/~morin/teaching/2804/',\n    university: 'Carleton',\n  },\n  {\n    title: 'Linear Algebra II',\n    number: 'MATH 2107',\n    link: 'https://www3.carleton.ca/calendars/ugrad/0910/courses/MATH/2107.html',\n    university: 'Carleton',\n  },\n  {\n    title: 'Classic Mythology - Greek & Roman Studies',\n    number: 'CLCV 2500',\n    link: 'https://carleton.ca/grs/cu-files/clcv-2500a-classical-mythology/',\n    university: 'Carleton',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'Carleton University',\n    degree: 'B.S. Computer Science w/ Honours in Cyber & Internet Security',\n    link: 'https://carleton.ca/scs',\n    year: 2023,\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Warner Brothers Discovery',\n    position: 'Cloud Software Engineer',\n    link: 'https://wbd.com/',\n    daterange: 'Summer 2022',\n    points: [\n      'Optimizing & debugging the You.i Engine platform to enable new product feautures',\n      'Learned from peers how the dev process & environment works before getting a hands on actively working on Jira requests for user interface bugs & security features on HBO Max',\n      'Created and documented test cases for feature additions & bugfixes for review by the QA team',\n      'Released new user interface features and fixed bugs on the HBO Max TV app',\n      'Developed software testing procedures after reproducing & solving bugs caught by other teams, that are tagged with the Cloud SDK',\n    ],\n  },\n  {\n    company: 'Carleton Immersive Media Studio',\n    position: 'CyberSecurity Analyst, Software Engineer, Research Assistant',\n    link: 'http://cims.carleton.ca/#/projects',\n    daterange: 'Fall 2022',\n    points: [\n      'Deployed new strategies to provide source control & code analysis with open-source tools',\n      'Automated git repository to use pre-commit hooks to re-format staged changes using static analysis tools which yielded more than 50% decrease of unnecessary re-builds across engineers on the team',\n      'Presented a code review to successfully improve & clean the codebase of 17,500+ issues in security, errors, & code style to a multi-disciplinary team with plans to automate the cleaning',\n      'Implemented Node.js back-end with Express.js using helmet & compression for routing, in addition to using Auth0’s express-OpenID-connect SDK for identity & access management',\n      'Led teammates to use git efficiently & helped with the training of new students',\n      'Attended agile meetings to discuss road-map & plans after working independently with R&D, in addition to being available on call for urgent support',\n    ],\n  },\n  {\n    company: 'Wype',\n    position: 'iOS Developer / Volunteer',\n    link: 'https://joinwype.com/',\n    daterange: 'Winter 2021',\n    points: [\n      'Assisting in front-end development with a remote agile team based in Germany, meeting on Discord.',\n      'Discussing with UX Design team members on product specification',\n      'Using CryptoKit for E-2-E encryption functionality to enhance user communication.',\n    ],\n  },\n  {\n    company: 'Royal Canadian Mounted Police',\n    position: 'Technical Analyst',\n    link: 'https://www.rcmp-grc.gc.ca/',\n    daterange: 'Spring 2021',\n    points: [\n      ' Assist and provide technical support by phone and email, advice and respond to RCMP users and external partners across Canada for the resolution of problems related to IT software, hardware, or connectivity issues.',\n      'Provide support to over 25,000 RCMP clients, including law enforcement personnel and civilian staff for any incidents related to application software, hardware and system connectivity.',\n    ],\n  },\n  {\n    company: 'Open-Source Contribution',\n    position: 'General / High-Level',\n    link: 'https://www.github.com/younesbram/',\n    daterange: 'Always available to assist intriguing projects',\n    points: [\n      'Helped find, organize, and reproduce bugs on multiple apps to send a professional request to the dev team for response/improvement/collaboration (Discord Tester, Spotify, Apple Music, iOS, Riot Games)',\n      'Provide online help and tutoring on computer science and tech-related courses to anyone in need',\n      'Access online communities on discord and github for cross collaboration and multi-disciplinary development of new ideas',\n    ],\n  },\n];\nexport default positions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'Courses',\n  'References',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Younes's Resume.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      <Courses data={courses} />\n      <References />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","degree","href","link","school","year","Education","id","map","defaultProps","company","position","daterange","points","point","Experience","job","Course","last","number","title","getRows","courses","sort","a","b","ret","university","course","idx","length","Courses","to","sections","Main","description","sec","toLowerCase","degrees","positions"],"sourceRoot":""}